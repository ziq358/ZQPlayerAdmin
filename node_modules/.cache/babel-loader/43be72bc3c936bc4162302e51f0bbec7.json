{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nvar _jsxFileName = \"/Users/wuyanqiang/Documents/h5/zqplayer-admin/src/components/tables/SortTable.tsx\";\n\n/**\n * Created by hao.cheng on 2017/4/15.\n */\nimport React from 'react';\nconst data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  address: 'New York No. 1 Lake Park'\n}, {\n  key: '2',\n  name: 'Jim Green',\n  age: 42,\n  address: 'London No. 1 Lake Park'\n}, {\n  key: '3',\n  name: 'Joe Black',\n  age: 32,\n  address: 'Sidney No. 1 Lake Park'\n}, {\n  key: '4',\n  name: 'Jim Red',\n  age: 32,\n  address: 'London No. 2 Lake Park'\n}];\n\nclass SortTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (pagination, filters, sorter) => {\n      console.log('Various parameters', pagination, filters, sorter);\n      this.setState({\n        filteredInfo: filters,\n        sortedInfo: sorter\n      });\n    };\n\n    this.clearFilters = () => {\n      this.setState({\n        filteredInfo: null\n      });\n    };\n\n    this.clearAll = () => {\n      this.setState({\n        filteredInfo: null,\n        sortedInfo: null\n      });\n    };\n\n    this.setAgeSort = () => {\n      this.setState({\n        sortedInfo: {\n          order: 'descend',\n          columnKey: 'age'\n        }\n      });\n    };\n\n    this.state = {\n      filteredInfo: {},\n      sortedInfo: {}\n    };\n  }\n\n  render() {\n    let _this$state = this.state,\n        sortedInfo = _this$state.sortedInfo,\n        filteredInfo = _this$state.filteredInfo;\n    const columns = [{\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      filters: [{\n        text: 'Joe',\n        value: 'Joe'\n      }, {\n        text: 'Jim',\n        value: 'Jim'\n      }],\n      filteredValue: filteredInfo.name || null,\n      onFilter: (value, record) => record.name.includes(value),\n      sorter: (a, b) => a.name.length - b.name.length,\n      sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order\n    }, {\n      title: 'Age',\n      dataIndex: 'age',\n      key: 'age',\n      sorter: (a, b) => a.age - b.age,\n      sortOrder: sortedInfo.columnKey === 'age' && sortedInfo.order\n    }, {\n      title: 'Address',\n      dataIndex: 'address',\n      key: 'address',\n      filters: [{\n        text: 'London',\n        value: 'London'\n      }, {\n        text: 'New York',\n        value: 'New York'\n      }],\n      filteredValue: filteredInfo.address || null,\n      onFilter: (value, record) => record.address.includes(value),\n      sorter: (a, b) => a.address.length - b.address.length,\n      sortOrder: sortedInfo.columnKey === 'address' && sortedInfo.order\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"table-operations\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      onClick: this.setAgeSort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Sort age\"), React.createElement(_Button, {\n      onClick: this.clearFilters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Clear filters\"), React.createElement(_Button, {\n      onClick: this.clearAll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Clear filters and sorters\")), React.createElement(_Table, {\n      columns: columns,\n      dataSource: data,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SortTable;","map":{"version":3,"sources":["/Users/wuyanqiang/Documents/h5/zqplayer-admin/src/components/tables/SortTable.tsx"],"names":["React","data","key","name","age","address","SortTable","Component","constructor","props","handleChange","pagination","filters","sorter","console","log","setState","filteredInfo","sortedInfo","clearFilters","clearAll","setAgeSort","order","columnKey","state","render","columns","title","dataIndex","text","value","filteredValue","onFilter","record","includes","a","b","length","sortOrder"],"mappings":"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","sourcesContent":["/**\n * Created by hao.cheng on 2017/4/15.\n */\nimport React from 'react';\nimport { Table, Button } from 'antd';\n\nconst data = [\n    {\n        key: '1',\n        name: 'John Brown',\n        age: 32,\n        address: 'New York No. 1 Lake Park',\n    },\n    {\n        key: '2',\n        name: 'Jim Green',\n        age: 42,\n        address: 'London No. 1 Lake Park',\n    },\n    {\n        key: '3',\n        name: 'Joe Black',\n        age: 32,\n        address: 'Sidney No. 1 Lake Park',\n    },\n    {\n        key: '4',\n        name: 'Jim Red',\n        age: 32,\n        address: 'London No. 2 Lake Park',\n    },\n];\n\ntype SortTableState = {\n    filteredInfo: any;\n    sortedInfo: any;\n};\nclass SortTable extends React.Component<any, SortTableState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            filteredInfo: {},\n            sortedInfo: {},\n        };\n    }\n    handleChange = (pagination: any, filters: any, sorter: any) => {\n        console.log('Various parameters', pagination, filters, sorter);\n        this.setState({\n            filteredInfo: filters,\n            sortedInfo: sorter,\n        });\n    };\n    clearFilters = () => {\n        this.setState({ filteredInfo: null });\n    };\n    clearAll = () => {\n        this.setState({\n            filteredInfo: null,\n            sortedInfo: null,\n        });\n    };\n    setAgeSort = () => {\n        this.setState({\n            sortedInfo: {\n                order: 'descend',\n                columnKey: 'age',\n            },\n        });\n    };\n    render() {\n        let { sortedInfo, filteredInfo } = this.state;\n        const columns = [\n            {\n                title: 'Name',\n                dataIndex: 'name',\n                key: 'name',\n                filters: [{ text: 'Joe', value: 'Joe' }, { text: 'Jim', value: 'Jim' }],\n                filteredValue: filteredInfo.name || null,\n                onFilter: (value: any, record: any) => record.name.includes(value),\n                sorter: (a: any, b: any) => a.name.length - b.name.length,\n                sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order,\n            },\n            {\n                title: 'Age',\n                dataIndex: 'age',\n                key: 'age',\n                sorter: (a: any, b: any) => a.age - b.age,\n                sortOrder: sortedInfo.columnKey === 'age' && sortedInfo.order,\n            },\n            {\n                title: 'Address',\n                dataIndex: 'address',\n                key: 'address',\n                filters: [\n                    { text: 'London', value: 'London' },\n                    { text: 'New York', value: 'New York' },\n                ],\n                filteredValue: filteredInfo.address || null,\n                onFilter: (value: any, record: any) => record.address.includes(value),\n                sorter: (a: any, b: any) => a.address.length - b.address.length,\n                sortOrder: sortedInfo.columnKey === 'address' && sortedInfo.order,\n            },\n        ];\n        return (\n            <div>\n                <div className=\"table-operations\">\n                    <Button onClick={this.setAgeSort}>Sort age</Button>\n                    <Button onClick={this.clearFilters}>Clear filters</Button>\n                    <Button onClick={this.clearAll}>Clear filters and sorters</Button>\n                </div>\n                <Table columns={columns} dataSource={data} onChange={this.handleChange} />\n            </div>\n        );\n    }\n}\n\nexport default SortTable;\n"]},"metadata":{},"sourceType":"module"}