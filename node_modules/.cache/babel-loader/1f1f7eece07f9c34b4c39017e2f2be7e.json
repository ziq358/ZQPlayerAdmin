{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react'), require('react-redux'), require('redux'), require('redux-thunk')) : typeof define === 'function' && define.amd ? define(['exports', 'react', 'react-redux', 'redux', 'redux-thunk'], factory) : (global = global || self, factory(global.howLongUntilLunch = {}, global.React, global.reactRedux, global.redux, global.thunk));\n})(this, function (exports, React, reactRedux, redux, thunk) {\n  'use strict';\n\n  React = React && React.hasOwnProperty('default') ? React['default'] : React;\n  thunk = thunk && thunk.hasOwnProperty('default') ? thunk['default'] : thunk;\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _objectSpread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n      var ownKeys = Object.keys(source);\n\n      if (typeof Object.getOwnPropertySymbols === 'function') {\n        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        }));\n      }\n\n      ownKeys.forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    }\n\n    return target;\n  }\n  /*\r\n   * File: type.js\r\n   * Desc: 描述\r\n   * File Created: 2019-03-18 00:22:03\r\n   * Author: chenghao\r\n   * ------\r\n   * Copyright 2019 - present, chenghao\r\n   */\n\n\n  var REQUEST_DATA = 'REQUEST_DATA';\n  var RECEIVE_DATA = 'RECEIVE_DATA';\n  /**\r\n   * 初始化state\r\n   * @param {*} param0.isFetching 是否获取中的状态\r\n   * @param {*} param0.data 初始的数据值\r\n   */\n\n  var initialState = function initialState() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$isFetching = _ref.isFetching,\n        isFetching = _ref$isFetching === void 0 ? true : _ref$isFetching,\n        _ref$data = _ref.data,\n        data = _ref$data === void 0 ? {} : _ref$data;\n\n    return {\n      isFetching: isFetching,\n      data: data\n    };\n  };\n  /**\r\n   * 统一处数据\r\n   * @param {*} state\r\n   * @param {*} action\r\n   */\n\n\n  var handleData = function handleData() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState();\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    switch (action.type) {\n      case REQUEST_DATA:\n        return _objectSpread({}, state, {\n          isFetching: true\n        });\n\n      case RECEIVE_DATA:\n        return _objectSpread({}, state, {\n          isFetching: false,\n          data: action.data,\n          timeStamp: Date.now()\n        });\n\n      default:\n        return _objectSpread({}, state);\n    }\n  };\n\n  var alitaState = function alitaState() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    switch (action.type) {\n      case RECEIVE_DATA:\n      case REQUEST_DATA:\n        return _objectSpread({}, state, _defineProperty({}, action.category, handleData(state[action.category], action)));\n\n      default:\n        return _objectSpread({}, state);\n    }\n  };\n\n  var reducer = redux.combineReducers({\n    alitaState: alitaState\n  });\n  /*\r\n   * File: Provider\r\n   * Desc: redux provider\r\n   * File Created: 2019-03-18 00:40:01\r\n   * Author: chenghao\r\n   * ------\r\n   * Copyright 2019 - present, chenghao\r\n   */\n\n  var middleware = [thunk];\n  var store = redux.createStore(reducer, redux.applyMiddleware.apply(void 0, middleware));\n\n  var Provider = function (_ref) {\n    var children = _ref.children;\n    return React.createElement(reactRedux.Provider, {\n      store: store\n    }, children);\n  };\n  /*\r\n   * File: index.js\r\n   * Desc: redux actions\r\n   * File Created: 2019-03-18 00:25:41\r\n   * Author: chenghao\r\n   * ------\r\n   * Copyright 2019 - present, chenghao\r\n   */\n\n\n  var funcs;\n  /**\r\n   * 注册接口请求api函数\r\n   * @param {*} apis\r\n   */\n\n  var setConfig = function setConfig(apis) {\n    return funcs = apis;\n  };\n\n  var requestData = function requestData(category) {\n    return {\n      type: REQUEST_DATA,\n      category: category\n    };\n  };\n\n  var receiveData = function receiveData(data, category) {\n    return {\n      type: RECEIVE_DATA,\n      data: data,\n      category: category\n    };\n  };\n  /**\r\n   * 请求数据调用方法\r\n   * @param funcName      请求接口的函数名\r\n   * @param params        请求接口的参数\r\n   * @param stateName     state的名称\r\n   * @param data          非异步请求时state的值\r\n   * stateName 为空时，默认设置为api函数的名称\r\n   */\n\n\n  var setAlitaState = function setAlitaState(_ref) {\n    var funcName = _ref.funcName,\n        params = _ref.params,\n        _ref$stateName = _ref.stateName,\n        stateName = _ref$stateName === void 0 ? funcName : _ref$stateName,\n        data = _ref.data;\n    return function (dispatch) {\n      // 非异步请求的处理\n      if (!funcName && stateName) return dispatch(receiveData(data, stateName)); // 异步请求的处理\n\n      dispatch(requestData(stateName));\n      return funcs[funcName](params).then(function (res) {\n        return dispatch(receiveData(res, stateName));\n      });\n    };\n  };\n  /**\r\n   * transform state common\r\n   * @param {*} alitaState\r\n   * @param {*} alitaStateKeys\r\n   */\n\n\n  function transformState(alitaState, alitaStateKeys) {\n    // 默认返回整个数据对象\n    if (!alitaStateKeys) return {\n      alitaState: alitaState\n    };\n    var _transferObj = {};\n    alitaStateKeys.forEach(function (key) {\n      if (Object.prototype.toString.call(key) === '[object String]') {\n        alitaState[key] && (_transferObj[key] = alitaState[key]);\n      }\n\n      if (Object.prototype.toString.call(key) === '[object Object]') {\n        var _realKey = Object.keys(key)[0];\n        var _initialVal = key[_realKey];\n        _transferObj[_realKey] = !alitaState[_realKey] ? initialState({\n          isFetching: false,\n          data: _initialVal\n        }) : alitaState[_realKey];\n      }\n    });\n    return _objectSpread({}, _transferObj);\n  }\n\n  var mapStateToProps = function mapStateToProps(_ref, alitaStateKeys) {\n    var alitaState = _ref.alitaState;\n    return transformState(alitaState, alitaStateKeys);\n  };\n\n  var mapDispatchToProps = function mapDispatchToProps(dispatch) {\n    return {\n      setAlitaState: redux.bindActionCreators(setAlitaState, dispatch)\n    };\n  };\n\n  var index = function (alitaStateKeys) {\n    return reactRedux.connect(function (state) {\n      return mapStateToProps(state, alitaStateKeys);\n    }, mapDispatchToProps);\n  };\n  /*\r\n   * File: hook.js\r\n   * Desc: hook api\r\n   * File Created: 2019-07-05 09:41:10\r\n   * Author: chenghao at <hao.cheng@karakal.com.cn>\r\n   * ------\r\n   * Copyright 2019 - present, karakal\r\n   */\n\n  /**\r\n   * alitaCreator - set alita state\r\n   */\n\n\n  function useAlitaCreator() {\n    var dispatch = reactRedux.useDispatch();\n    return redux.bindActionCreators(setAlitaState, dispatch);\n  }\n  /**\r\n   * get alita state from redux\r\n   * @param {*} alitaStateKeys keys - extract alita single data\r\n   */\n\n\n  function useAlitaState(alitaStateKeys) {\n    return reactRedux.useSelector(function (_ref) {\n      var alitaState = _ref.alitaState;\n      return transformState(alitaState, alitaStateKeys);\n    }, reactRedux.shallowEqual);\n  }\n  /*\r\n   * File: main.js\r\n   * Desc: 入口文件\r\n   * File Created: 2019-03-17 15:20:38\r\n   * Author: chenghao\r\n   * ------\r\n   * Copyright 2019 - present, chenghao\r\n   */\n\n\n  exports.AlitaProvider = Provider;\n  exports.connectAlita = index;\n  exports.setAlitaState = setAlitaState;\n  exports.setConfig = setConfig;\n  exports.useAlitaCreator = useAlitaCreator;\n  exports.useAlitaState = useAlitaState;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":null,"metadata":{},"sourceType":"script"}